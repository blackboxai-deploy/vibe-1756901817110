import { GeneratedFile } from '@/types/generation';

export function createProjectStructure(files: GeneratedFile[]): string {
  const structure: Record<string, string[]> = {};
  
  files.forEach(file => {
    const parts = file.path.split('/');
    const fileName = parts.pop()!;
    const dirPath = parts.join('/');
    
    if (!structure[dirPath]) {
      structure[dirPath] = [];
    }
    structure[dirPath].push(fileName);
  });
  
  let output = 'Generated Project Structure:\n\n';
  
  Object.keys(structure)
    .sort()
    .forEach(dir => {
      if (dir) {
        output += `📁 ${dir}/\n`;
        structure[dir].forEach(file => {
          output += `  📄 ${file}\n`;
        });
      } else {
        structure[dir].forEach(file => {
          output += `📄 ${file}\n`;
        });
      }
      output += '\n';
    });
  
  return output;
}

export function generatePackageJson(dependencies: string[] = []): string {
  const baseDependencies = {
    'next': '15.3.2',
    'react': '^19.0.0',
    'react-dom': '^19.0.0',
    'tailwindcss': '^4.1.6',
    'typescript': '^5'
  };
  
  const additionalDeps: Record<string, string> = {};
  
  dependencies.forEach(dep => {
    const [name, version] = dep.split('@');
    additionalDeps[name] = version || 'latest';
  });
  
  const allDependencies = { ...baseDependencies, ...additionalDeps };
  
  return JSON.stringify({
    name: 'generated-app',
    version: '1.0.0',
    private: true,
    scripts: {
      dev: 'next dev',
      build: 'next build',
      start: 'next start',
      lint: 'next lint'
    },
    dependencies: allDependencies,
    devDependencies: {
      '@types/node': '^20',
      '@types/react': '^19',
      '@types/react-dom': '^19',
      'autoprefixer': '^10.4.21',
      'eslint': '^9',
      'eslint-config-next': '15.3.2',
      'postcss': '^8.5.3'
    }
  }, null, 2);
}

export function generateReadme(prompt: string, instructions: string): string {
  return `# Generated Next.js Application

## Description
${prompt}

## Getting Started

1. Install dependencies:
\`\`\`bash
npm install
\`\`\`

2. Run the development server:
\`\`\`bash
npm run dev
\`\`\`

3. Open [http://localhost:3000](http://localhost:3000) in your browser.

## Instructions
${instructions}

## Tech Stack
- Next.js 15.3.2
- React 19
- TypeScript
- Tailwind CSS
- App Router

## Generated by AI App Builder
This application was generated automatically based on your prompt.
`;
}

export function downloadProject(files: GeneratedFile[], prompt: string, instructions: string, dependencies: string[] = []) {
  // Add package.json and README to files
  const allFiles = [
    ...files,
    {
      path: 'package.json',
      content: generatePackageJson(dependencies),
      type: 'config' as const
    },
    {
      path: 'README.md',
      content: generateReadme(prompt, instructions),
      type: 'config' as const
    }
  ];

  // Create ZIP file content (simplified for browser)
  const projectData = {
    files: allFiles,
    structure: createProjectStructure(allFiles)
  };

  // Create downloadable JSON (in a real app, you'd create a proper ZIP)
  const dataStr = JSON.stringify(projectData, null, 2);
  const dataBlob = new Blob([dataStr], { type: 'application/json' });
  const url = URL.createObjectURL(dataBlob);
  
  const link = document.createElement('a');
  link.href = url;
  link.download = 'generated-app.json';
  document.body.appendChild(link);
  link.click();
  document.body.removeChild(link);
  
  URL.revokeObjectURL(url);
}